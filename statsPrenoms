#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Apr  9 13:11:29 2020

@author: fxc
"""

import pandas as pd
from math import ceil
import matplotlib.pyplot as plt

dataset = pd.read_csv("nat2018.csv")

dataset = dataset.iloc[1:636459, 0]

dataset = dataset.values

colonnes = dict()
colonnes['sexe'] = []
colonnes['prenom'] = []
colonnes['annees'] = []
colonnes['nombre'] = []

i = 0
for ligne in dataset: 
    i+=1
    print(i)
    ligne = ligne.split(';')
    colonnes['sexe'].append(int(ligne[0]))
    colonnes['prenom'].append(ligne[1])
    colonnes['annees'].append(ligne[2])
    colonnes['nombre'].append(int(ligne[3]))

dataset = pd.DataFrame(colonnes)
data_men = dataset[dataset['sexe'] == 1]
data_women = dataset[dataset['sexe'] == 2]


print(len(data_women))
#data_women = data_women.iloc[:100, :]

def convertBD(data):
    del(data['sexe'])
    annees_data = data.groupby('annees')
    prenom_data = data.groupby('prenom')

    annees = [annee[0] for annee in annees_data]
    prenoms = [prenom[1] for prenom in prenom_data]

    df = pd.DataFrame(index = [], columns = annees)
    
    i = 0
    nbr_ligne = len(prenoms)
    for prenom in prenoms:
        i+=1
        print(ceil((i/nbr_ligne)*100), '%')
        for index,row in prenom.iterrows():
            df.loc[row[0],row[1]] = row[2]
    df = df.fillna(0)        
    return df

df_men = convertBD(data_men)
df_women = convertBD(data_women)

#Pour sauvegarder les Dataframe lorsqu'elle ont été conçues

#df_men.to_csv('DB_Hommes_prenoms.csv')
#df_women.to_csv('DB_Femmes_prenoms.csv')

#Pour sauvegarder les Dataframe lorsqu'elle ont été conçues

df_men = pd.read_csv("DB_Hommes_prenoms.csv")
df_men = df_men.set_index('Unnamed: 0')
df_women = pd.read_csv("DB_Femmes_prenoms.csv")
df_women = df_women.set_index('Unnamed: 0')

def creerDiagramme(prenom, datas):  
    

    PRENOM = datas.loc[prenom]

    try :    
        PRENOM_values = [int(value) for value in PRENOM]
    except :
         print('Ce nom n\'exite pas dans la DB. Attention à mettre le nom en MAJUSCULE.')
         pass

    del(PRENOM_values[-1])
    
    fig = plt.figure()
    x = list(range(1900,2019))
    height = PRENOM_values
    width = 0.5
    
    ax = plt.axes()
    ax.grid(which='major', axis = 'y')
    plt.xticks(x, rotation=90, fontsize=8)
    plt.figtext(0.65,0.85,'TOTAL = {}'.format(sum(PRENOM_values)), size = 'x-large')
    
    plt.title('Statistiques pour le prénom {}.'.format(prenom))
    
    plt.bar(x,height,width)

    plt.show()

creerDiagramme('FERNAND', df_men)
